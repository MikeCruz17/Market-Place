@model CapaEntidad.PRODUCTO

@{
    ViewBag.Title = "AgregarProducto";
}


@using (Html.BeginForm("AgregarProducto", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<main style="height: 85vh; padding: 50px 100px;" class="d-flex flex-column align-items-center">

    <div class="">
        <h4>NUEVO PRODUCTO</h4>
    </div>

    <div style="width: 100%;" class="d-flex flex-row justify-content-between shadow-sm p-3 mb-5 bg-body rounded">

        <div>


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ID_Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ID_Categoria, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ID_Categoria, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ubicacion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })
                </div>



            </div>


            <div class="mb-3">
                <label for="formFile" class="form-label">Imagen</label>
                <input class="form-control w-auto" type="file" id="formFile" name="imagene" onchange="preview()">

            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-dark btn-lg" />
                </div>
            </div>

        </div>
        <div id="div2">

            <img width="400" id="frame" src="~/Fotos/Logo.png" class="img-fluid" />

        </div>

    </div>



</main>


}


        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

@*// FUNCION QUE ME MUESTRA UNA VISUALIZACION DE LA IMAGEN CARGADA.*@
        <script>
            function preview() {
                frame.src = URL.createObjectURL(event.target.files[0]);
            }

        </script>
